{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Array","useState","name","age","items","setItems","Name","setName","Age","setAge","showjson","event","field","target","value","id","type","onChange","JSON","stringify","onClick","find","item","alert","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"4LAoEeA,MAnEf,WAAkB,IAAD,EACWC,mBAAS,CAAC,CAAEC,KAAM,MAAOC,IAAK,MADzC,mBACRC,EADQ,KACDC,EADC,OAESJ,mBAAS,CAAEC,KAAM,KAF1B,mBAERI,EAFQ,KAEFC,EAFE,OAGON,mBAAS,CAAEE,IAAK,KAHvB,mBAGRK,EAHQ,KAGHC,EAHG,KAYTC,EAAW,SAACC,EAAOC,GACT,SAAVA,EACFL,EAAQ,CAAEL,KAAMS,EAAME,OAAOC,QAE7BL,EAAO,CAAEN,IAAKQ,EAAME,OAAOC,SAI/B,OACE,gCACE,0DACA,sBAAKC,GAAG,YAAR,UACE,qCACA,uBACEC,KAAK,OACLF,MAAOR,EAAKJ,KACZe,SAAU,SAACN,GACTJ,EAAQI,EAAME,OAAOC,OACrBJ,EAASC,EAAO,cAKtB,uBACCO,KAAKC,UAAUb,GAChB,sBAAKS,GAAG,OAAR,UACE,oCACA,uBACED,MAAON,EAAIL,IACXc,SAAU,SAACN,GACTF,EAAOE,EAAME,OAAOC,OACpBJ,EAASC,EAAO,aAKtB,uBACCO,KAAKC,UAAUX,GAChB,uBACA,wBAAQY,QAAS,WA7CdhB,EAAMiB,MAAK,SAACC,GAAD,OAAUA,EAAKpB,OAASI,EAAKJ,MAAQoB,EAAKnB,MAAQK,EAAIL,OAGpEoB,MAAM,GAAD,OAAIjB,EAAKJ,KAAT,sBAFLG,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEW,GAAIX,EAAMoB,OAAS,EAAGtB,KAAMI,EAAKJ,KAAMC,IAAKK,EAAIL,SA4CtE,iBACA,+BACE,qCACCC,EAAMqB,KAAI,SAACH,GAAD,OACT,6BAAmBA,EAAKpB,MAAfoB,EAAKP,UAGlB,+BACE,oCACCX,EAAMqB,KAAI,SAACH,GAAD,OACT,6BAAmBA,EAAKnB,KAAfmB,EAAKP,cClDTW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.d7981f84.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nfunction Array() {\n  const [items, setItems] = useState([{ name: \"Abi\", age: 20 }]);\n  const [Name, setName] = useState({ name: '' });\n  const [Age, setAge] = useState({ age: '' });\n\n  const addToList = () => {\n    if (!items.find((item) => item.name === Name.name && item.age === Age.age)) {\n      setItems([...items, { id: items.length + 1, name: Name.name, age: Age.age }]);\n    } else {\n      alert(`${Name.name} is already added`);\n    }\n  };\n  const showjson = (event, field) => {\n    if (field === 'name') {\n      setName({ name: event.target.value });\n    } else {\n      setAge({ age: event.target.value });\n    }\n\n  }\n  return (\n    <div>\n      <h3>ADD NAME AND AGE TO LIST</h3>\n      <div id=\"container\">\n        <p>Name</p>\n        <input\n          type=\"text\"\n          value={Name.name}\n          onChange={(event) => {\n            setName(event.target.value)\n            showjson(event, 'name')\n          }\n          }\n        />\n      </div>\n      <br />\n      {JSON.stringify(Name)}\n      <div id=\"type\">\n        <p>Age</p>\n        <input\n          value={Age.age}\n          onChange={(event) => {\n            setAge(event.target.value)\n            showjson(event, 'age')\n          }\n          }\n        />\n      </div>\n      <br />\n      {JSON.stringify(Age)}\n      <br />\n      <button onClick={() => addToList()}>Add</button>\n      <ol>\n        <u>Name</u>\n        {items.map((item) => (\n          <li key={item.id}>{item.name}</li>\n        ))}\n      </ol>\n      <ul>\n        <u>Age</u>\n        {items.map((item) => (\n          <li key={item.id}>{item.age}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\nexport default Array;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}